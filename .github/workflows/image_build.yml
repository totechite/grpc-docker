name: Image Build

on:
    workflow_dispatch: {}

permissions:
  contents: read
  packages: write

concurrency: ${{ github.workflow }}

env:
  REPOSITORY_NAME: ghcr.io/totechite/grpc-docker
  GRPC_OUTPUT_PATH: /usr/local/lib/php/extensions/grpc.so

jobs:
    php-debian:
        runs-on: [ ubuntu-24.04 ]
        strategy:
            fail-fast: false
            matrix:
                base_image:
                    # https://hub.docker.com/_/php
                    - { base_image_tag: "fpm-bullseye", os_ver: "bullseye",  glibc_ver: "2.31" }
                    - { base_image_tag: "fpm-bookworm", os_ver: "bookworm",  glibc_ver: "2.36" }
                grpc_ver:
                    # Refarence: https://pecl.php.net/package/grpc
                    - 1.66.0
                    - 1.65.5
                    - 1.64.1
        steps:
          - name: Checkout
            uses: actions/checkout@v4

          - name: Set up QEMU
            uses: docker/setup-qemu-action@v3

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3

          - name: Set Environment Varriable
            shell: bash
            run: |
              echo "IMAGE_TAG_OSVER=${{ env.REPOSITORY_NAME }}:php-pecl-grpc${{ matrix.grpc_ver }}-${{ matrix.base_image.os_ver }}" >> $GITHUB_ENV
              echo "IMAGE_TAG_LIBCVER=${{ env.REPOSITORY_NAME }}:php-pecl-grpc${{ matrix.grpc_ver }}-glibc${{ matrix.base_image.glibc_ver }}" >> $GITHUB_ENV

          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              registry: ghcr.io
              username: ${{ github.actor }}
              password: ${{ secrets.GITHUB_TOKEN }}

          - name: Image Build
            uses: docker/build-push-action@v6
            with:
              context: .
              file: ./src/php/glibc/debian.Dockerfile
              build-args: |
                BUILDKIT_INLINE_CACHE=1
                PHP_BASEIMAGE_TAG=${{ matrix.base_image.base_image_tag }}
                GRPC_VERSION=${{ matrix.grpc_ver }}
                GRPC_OUTPUT_PATH=${{ env.GRPC_OUTPUT_PATH }}
              cache-from: ${{ env.IMAGE_TAG_OSVER }}
              outputs: type=registry,push=true,oci-mediatypes=true,annotation-index.org.opencontainers.image.description="gRPC builded docker images",compression=zstd,compression-level=8
              provenance: false
              tags: |
                ${{ env.IMAGE_TAG_OSVER }}
                ${{ env.IMAGE_TAG_LIBCVER }}
              platforms: |
                linux/amd64
                linux/arm64
              labels: |
                totechite.glib.version="${{ matrix.base_image.glibc_ver }}"
                totechite.grpc.version="${{ matrix.grpc_ver }}"
                org.opencontainers.image.source="${{ github.repositoryUrl }}"
